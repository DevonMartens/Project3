{"version":3,"sources":["assets/audio/crash.mp3","assets/audio/kick-bass.mp3","assets/audio/snare.mp3","pages/components/GameHeader.js","pages/IsEmpty/isEmpty.js","pages/GamePages/GamePages.js","pages/components/Nav.js","pages/QuizInstructions.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GameHeader","react_default","a","createElement","className","isEmpty","value","undefined","Object","keys","length","trim","GamePages","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","displayQuestions","questions","arguments","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","numberOfQuestions","handleOptionClick","e","target","innerHTML","toLowerCase","document","getElementById","play","correctAnswer","wrongAnswer","handleNextButtonClick","playButtonSound","prevState","handlePreviousButtonClick","handleQuitButtonClick","window","confirm","history","push","handleButtonClick","id","M","toast","html","classes","displayLength","score","correctAnswers","numberOfAnsweredQuestions","navigator","vibrate","wrongAnswers","handleHints","indexOfAnswer","options","Array","from","querySelectorAll","forEach","option","index","_loop","randomNumber","Math","round","random","style","visibility","hints","fiftyFifty","usedFiftyFifty","time","_this$state","_this$state2","react","Helmet","src","correctNotification","wrongNotification","buttonSound","onClick","question","optionA","optionB","optionC","optionD","Component","Nav","href","QuizInstructions","react_router_dom","to","App","components_Nav","components_GameHeader","react_router","exact","path","component","Login","Profile","Game","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"olFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wOCSzBC,MARf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,+HCDIE,EAHA,SAACC,GAAD,YAAqBC,IAAVD,GAAgC,MAATA,GAC3B,kBAAVA,GAAmD,IAA9BE,OAAOC,KAAKH,GAAOI,QAC7B,kBAAVJ,GAA8C,IAAxBA,EAAMK,OAAOD,2DCoOlCE,cA1NX,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAQ,KAAAJ,IAChBE,EAAAN,OAAAS,EAAA,EAAAT,CAAAQ,KAAAR,OAAAU,EAAA,EAAAV,CAAAI,GAAAO,KAAAH,KAAMH,KAyBRO,iBAAmB,WAAuF,IAAtFC,EAAsFC,UAAAZ,OAAA,QAAAH,IAAAe,UAAA,GAAAA,UAAA,GAA1ER,EAAKS,MAAMF,UAAWG,EAAoDF,UAAAZ,OAAA,EAAAY,UAAA,QAAAf,EAAnCkB,EAAmCH,UAAAZ,OAAA,EAAAY,UAAA,QAAAf,EAArBmB,EAAqBJ,UAAAZ,OAAA,EAAAY,UAAA,QAAAf,EACjGoB,EAAwBb,EAAKS,MAA7BI,qBACL,IAAKtB,EAAQS,EAAKS,MAAMF,WAAY,CAEhCG,GADAH,EAAYP,EAAKS,MAAMF,WACKM,GAC5BF,EAAeJ,EAAUM,EAAuB,GAChDD,EAAkBL,EAAUM,EAAqB,GACjD,IAAMC,EAASJ,EAAgBI,OAC/Bd,EAAKe,SAAS,CACVL,kBACAC,eACAC,mBACAI,kBAAmBT,EAAUX,OAC7BkB,aAvCMd,EA4ClBiB,kBAAmB,SAACC,GACbA,EAAEC,OAAOC,UAAUC,gBAAiBrB,EAAKS,MAAMK,OAAOO,eACtDC,SAASC,eAAe,iBAAiBC,OAC1CxB,EAAKyB,kBAGJH,SAASC,eAAe,eAAeC,OACpCxB,EAAK0B,gBAnDG1B,EAuDlB2B,sBAAwB,WACpB3B,EAAK4B,uBAC2BnC,IAA5BO,EAAKS,MAAME,cACZX,EAAKe,SAAS,SAAAc,GAAS,MAAK,CACxBhB,qBAAsBgB,EAAUhB,qBAAuB,IACvD,WACAb,EAAKM,iBAAiBN,EAAKS,MAAMA,MAAOT,EAAKS,MAAMC,gBAAiBV,EAAKS,MAAME,aAAcX,EAAKS,MAAMG,qBA7DjGZ,EAkElB8B,0BAA4B,WAC1B9B,EAAK4B,uBAC+BnC,IAAhCO,EAAKS,MAAMG,kBACZZ,EAAKe,SAAS,SAAAc,GAAS,MAAK,CACxBhB,qBAAsBgB,EAAUhB,qBAAuB,IACvD,WACAb,EAAKM,iBAAiBN,EAAKS,MAAMA,MAAOT,EAAKS,MAAMC,gBAAiBV,EAAKS,MAAME,aAAcX,EAAKS,MAAMG,qBAxE/FZ,EA6EjB+B,sBAAwB,WACpB/B,EAAK4B,kBACDI,OAAOC,QAAQ,4CACfjC,EAAKD,MAAMmC,QAAQC,KAAK,MAhFfnC,EAqFlBoC,kBAAoB,SAAClB,GACjB,OAAQA,EAAEC,OAAOkB,IACb,IAAK,cACDrC,EAAK2B,wBACL,MAEJ,IAAK,kBACH3B,EAAK8B,4BACL,MAEH,IAAK,cACF9B,EAAK+B,0BAhGG/B,EA0GlB4B,gBAAkB,WACdN,SAASC,eAAe,gBAAgBC,QA3G1BxB,EA8GlByB,cAAgB,WACZa,IAAEC,MAAM,CACJC,KAAM,oBACNC,QAAS,cACTC,cAAe,OAEnB1C,EAAKe,SAAS,SAAAc,GAAS,MAAI,CACvBc,MAAOd,EAAUc,MAAQ,EACzBC,eAAgBf,EAAUe,eAAiB,EAC3C/B,qBAAsBgB,EAAUhB,qBAAuB,EACvDgC,0BAA0BhB,EAAUgB,0BAA4B,IAChE,WACA7C,EAAKM,iBAAiBN,EAAKS,MAAMF,UAAWP,EAAKS,MAAMC,gBAAiBV,EAAKS,MAAME,aAAcX,EAAKS,MAAMG,qBA1HlGZ,EA8HlB0B,YAAc,WACZoB,UAAUC,QAAQ,KAClBT,IAAEC,MAAM,CACJC,KAAM,kBACNC,QAAS,cACTC,cAAe,OAEnB1C,EAAKe,SAAS,SAAAc,GAAS,MAAI,CACxBmB,aAAcnB,EAAUmB,aAAe,EACvCnC,qBAAsBgB,EAAUhB,qBAAuB,EACvDgC,0BAA2BhB,EAAUgB,0BAA4B,IAChE,WACA7C,EAAKM,iBAAiBN,EAAKS,MAAMF,UAAWP,EAAKS,MAAMC,gBAAiBV,EAAKS,MAAME,aAAcX,EAAKS,MAAMG,qBA1IhGZ,EA8IpBiD,YAAc,WACV,IACIC,EADEC,EAAUC,MAAMC,KAAK/B,SAASgC,iBAAiB,YAGrDH,EAAQI,QAAQ,SAACC,EAAQC,GAClBD,EAAOpC,UAAUC,gBAAkBrB,EAAKS,MAAMK,OAAOO,gBACpD6B,EAAgBO,KAIxB,IAVe,IAAAC,EAAA,WAWX,IAAMC,EAAeC,KAAKC,MAAsB,EAAhBD,KAAKE,UACjCH,IAAiBT,GACjBC,EAAQI,QAAQ,SAACC,EAAQC,GAChBA,IAAUE,IACVH,EAAOO,MAAMC,WAAa,UAE9BhE,EAAKe,SAAS,mBAPf2C,KAtJZ1D,EAAKS,MAAO,CACRF,YACAG,gBAAgB,GAChBC,aAAa,GACbC,iBAAkB,GAClBE,OAAQ,GACRE,kBAAmB,EACnB6B,0BAA0B,EAC1BhC,qBAAsB,EACtB8B,MAAO,EACPC,eAAgB,EAChBI,aAAa,EACbiB,MAAM,EACNC,WAAW,EACXC,gBAAe,EACfC,KAAK,IAjBOpE,mFAqBC,IAAAqE,EACsDnE,KAAKO,MAApEF,EADS8D,EACT9D,UAAWG,EADF2D,EACE3D,gBAAiBC,EADnB0D,EACmB1D,aAAcC,EADjCyD,EACiCzD,iBAClDV,KAAKI,iBAAiBC,EAAUG,EAAgBC,EAAcC,oCA8IxD,IAAA0D,EACsEpE,KAAKO,MAAzEC,EADF4D,EACE5D,gBAAiBG,EADnByD,EACmBzD,qBAAsBoD,EADzCK,EACyCL,MAAOjD,EADhDsD,EACgDtD,kBACtD,OACI7B,EAAAC,EAAAC,cAACkF,EAAA,SAAD,KACIpF,EAAAC,EAAAC,cAACmF,EAAA,OAAD,KAAQrF,EAAAC,EAAAC,cAAA,2BACRF,EAAAC,EAAAC,cAACkF,EAAA,SAAD,KACIpF,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,gBAAgBoC,IAAKC,MAC/BvF,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,cAAcoC,IAAKE,MAC7BxF,EAAAC,EAAAC,cAAA,SAAOgD,GAAG,eAAeoC,IAAKG,OAElCzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SACJF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0CAAhB,aADI,KAGAH,EAAAC,EAAAC,cAAA,SACJF,EAAAC,EAAAC,cAAA,QAAMwF,QAAS3E,KAAK+C,YAAa3D,UAAU,yDACnCH,EAAAC,EAAAC,cAAA,YAAQ4E,KAIhB9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,YAAOwB,EAAuB,EAA9B,OAAqCG,GACrC7B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kCAAhB,wBAIRH,EAAAC,EAAAC,cAAA,UAAKqB,EAAgBoE,UAEtB3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACVH,EAAAC,EAAAC,cAAA,KAAGwF,QAAS3E,KAAKe,kBAAmB3B,UAAU,UAAUoB,EAAgBqE,SACxE5F,EAAAC,EAAAC,cAAA,KAAIwF,QAAS3E,KAAKe,kBAAkB3B,UAAU,UAAUoB,EAAgBsE,UAG9E7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACTH,EAAAC,EAAAC,cAAA,KAAGwF,QAAS3E,KAAKe,kBAAmB3B,UAAU,UAAUoB,EAAgBuE,SACxE9F,EAAAC,EAAAC,cAAA,KAAGwF,QAAS3E,KAAKe,kBAAmB3B,UAAU,UAAUoB,EAAgBwE,UAE9E/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQgD,GAAG,kBAAkBwC,QAAS3E,KAAKkC,mBAA3C,YACAjD,EAAAC,EAAAC,cAAA,UAAQgD,GAAG,cAAkBwC,QAAS3E,KAAKkC,mBAA3C,QACAjD,EAAAC,EAAAC,cAAA,UAAQgD,GAAG,cAAkBwC,QAAS3E,KAAKkC,mBAA3C,sBAhNE+C,oCCMTC,MAdf,WACI,OACIjG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,KAAR,SACJlG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,SAAR,cACJlG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,YAAR,iCCgBTC,EAtBU,kBACrBnG,EAAAC,EAAAC,cAACkF,EAAA,SAAD,KACIpF,EAAAC,EAAAC,cAACmF,EAAA,OAAD,KAAQrF,EAAAC,EAAAC,cAAA,4CACRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkB+C,GAAG,aAC/BlD,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAOH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,GAAI,KAAV,wBACvBrG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAQH,EAAAC,EAAAC,cAACkG,EAAA,EAAD,CAAMC,GAAI,cAAV,yBCczBC,MAnBf,WACI,OACEtG,EAAAC,EAAAC,cAACkG,EAAA,EAAD,KACEpG,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAACsG,EAAD,MACExG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,MACjC7G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWC,MAJvC,IAOE7G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOE,KAAK,qBAAqBC,UAAWT,IAE5CnG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYE,MACzC9G,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWG,OCfzCC,EAAcC,QACW,cAA7BpE,OAAOqE,SAASC,UAEe,UAA7BtE,OAAOqE,SAASC,UAEhBtE,OAAOqE,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvB3D,UAAU4D,cACPC,SAASF,GACTG,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBtG,QACfqC,UAAU4D,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOrI,EAAAC,EAAAC,cAACoI,EAAD,MAASnG,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBuB,UAAW,CAGzE,GADkB,IAAI4E,IAAIC,GAAwB3F,OAAOqE,UAC3CuB,SAAW5F,OAAOqE,SAASuB,OAIvC,OAGF5F,OAAO6F,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAqB,OAAMH,GAAN,sBAENxB,EAwCX,SAAiCM,GAE/BsB,MAAMtB,GACHG,KAAK,SAAAoB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CtF,UAAU4D,cAAc2B,MAAMzB,KAAK,SAAAC,GACjCA,EAAayB,aAAa1B,KAAK,WAC7B5E,OAAOqE,SAASkC,aAKpB/B,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEAzDAoB,CAAwB/B,GAHxBD,EAAgBC,MC7BxBgC","file":"static/js/main.a504cbc0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/crash.2054f10b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/kick-bass.ba702fe1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/snare.fcea7bf1.mp3\";","import React from \"react\";\nfunction GameHeader() {\n    return (\n        <div className=\"welcomemessage\">\n            <h1>Who Wants To Be A Full Stack Developer!</h1>\n        </div>\n    );\n}\n\nexport default GameHeader;","const isEmpty = (value) => value === undefined || value == null ||\n     (typeof value === 'object'&& Object.keys(value).length === 0) ||\n      (typeof value === 'string' && value.trim().length === 0)\n export default isEmpty;","import React, { Component, Fragment } from 'react';\nimport { Helmet } from 'react-helmet';\nimport M from 'materialize-css';\n\nimport questions from '../questions/questions.json';\nimport isEmpty from '../IsEmpty/isEmpty.js';\nimport correctNotification from '../../assets/audio/crash.mp3';\nimport wrongNotification from '../../assets/audio/kick-bass.mp3';\nimport buttonSound from '../../assets/audio/snare.mp3';\n\n\nclass GamePages extends Component {\n    constructor (props) {\n        super(props);\n        this.state ={\n            questions,\n            currentQuestion:{},\n            nextQuestion:{},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions:0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers: 0,\n            wrongAnswers:0,\n            hints:5,\n            fiftyFifty:2,\n            usedFiftyFifty:false,\n            time:{}\n        };      \n    }\n\n    componentDidMount () {\n        const { questions, currentQuestion, nextQuestion, previousQuestion } = this.state;\n        this.displayQuestions(questions,currentQuestion,nextQuestion, previousQuestion);\n    }\n\n      displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n          let {currentQuestionIndex} = this.state; \n          if (!isEmpty(this.state.questions)) {\n              questions = this.state.questions;\n              currentQuestion = questions[currentQuestionIndex];\n              nextQuestion = questions[currentQuestionIndex + 1];\n              previousQuestion= questions[currentQuestionIndex-1];\n              const answer = currentQuestion.answer;\n              this.setState({\n                  currentQuestion,\n                  nextQuestion,\n                  previousQuestion,\n                  numberOfQuestions: questions.length,\n                  answer\n              });\n          }\n      };\n\n      handleOptionClick =(e) => {\n         if (e.target.innerHTML.toLowerCase()=== this.state.answer.toLowerCase()){\n             document.getElementById('correct-sound').play();\n            this.correctAnswer();\n            } \n            else {\n             document.getElementById('wrong-sound').play();\n                this.wrongAnswer()\n            } \n      }\n\n      handleNextButtonClick = ()=>{\n          this.playButtonSound();\n          if (this.state.nextQuestion !== undefined){\n             this.setState(prevState => ({\n                 currentQuestionIndex: prevState.currentQuestionIndex + 1\n             }), ()=>{\n                 this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n             });\n          }\n      };\n\n      handlePreviousButtonClick = ()=>{\n        this.playButtonSound();\n        if (this.state.previousQuestion !== undefined){\n           this.setState(prevState => ({\n               currentQuestionIndex: prevState.currentQuestionIndex - 1\n           }), ()=>{\n               this.displayQuestions(this.state.state, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n           });\n        }\n    };\n\n       handleQuitButtonClick = ()=> {\n           this.playButtonSound();\n           if (window.confirm('Are You Sure You Want To End Your Game?')){\n               this.props.history.push('/');\n              \n           }\n       };\n\n      handleButtonClick = (e)=> {\n          switch (e.target.id){\n              case 'next-button':\n                  this.handleNextButtonClick();\n                  break;\n\n              case 'previous-button':\n                this.handlePreviousButtonClick();\n                break;\n\n             case 'quit-button':\n                this.handleQuitButtonClick();\n                break;\n\n              default:\n                 break;\n          }\n          \n\n      };\n\n      playButtonSound = () =>{\n          document.getElementById('button-sound').play();\n      }\n\n      correctAnswer = () =>{\n          M.toast({\n              html: 'Correct Answer!!!',\n              classes: 'toast-valid',\n              displayLength: 1500\n          });\n          this.setState(prevState =>({\n              score: prevState.score + 1,\n              correctAnswers: prevState.correctAnswers + 1,\n              currentQuestionIndex: prevState.currentQuestionIndex + 1,\n              numberOfAnsweredQuestions:prevState.numberOfAnsweredQuestions + 1\n          }), ()=>{\n              this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\n          });\n      }\n         \n      wrongAnswer = () =>{\n        navigator.vibrate(1000)\n        M.toast({\n            html: 'Wrong Answer!!!',\n            classes: 'toast-valid',\n            displayLength: 1500\n        });\n        this.setState(prevState =>({\n           wrongAnswers: prevState.wrongAnswers + 1,\n           currentQuestionIndex: prevState.currentQuestionIndex + 1,\n           numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n        }), ()=> {\n            this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion)\n        });\n    }\n\n    handleHints = () =>{\n        const options = Array.from(document.querySelectorAll('.option'));\n        let indexOfAnswer;\n\n        options.forEach((option, index)=>{\n            if(option.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\n                indexOfAnswer = index;\n            }\n        });\n        \n        while (true){\n            const randomNumber = Math.round(Math.random() * 3);\n            if (randomNumber !== indexOfAnswer) {\n                options.forEach((option, index)=> {\n                     if (index === randomNumber) {\n                         option.style.visibility = 'hidden';\n                     }\n                     this.setState(()=>{});\n                });\n            }\n        }\n    }\n          \n    render () {\n        const { currentQuestion, currentQuestionIndex, hints, numberOfQuestions } = this.state;\n        return(\n            <Fragment>\n                <Helmet><title>Quiz Page</title></Helmet>\n                <Fragment>\n                    <audio id=\"correct-sound\" src={correctNotification}></audio>\n                    <audio id=\"wrong-sound\" src={wrongNotification}></audio>\n                    <audio id=\"button-sound\" src={buttonSound}></audio>\n                </Fragment>\n                <div className=\"questions\">\n                    <div className=\"lifeline-container\">\n                        <p>\n                    <span className=\" mdi-set-center mdi-24px lifeline-icon\">Life-Line</span>2\n                        </p>\n                        <p>\n                    <span onClick={this.handleHints} className=\" mdi mdi-lightbulb-on-outline mdi-24px lifeline-icon\"></span> \n                            <span >{hints}</span>\n                        </p>\n                    </div>\n                \n                    <div className=\"timer-container\">\n                        <p>\n                            <span>{currentQuestionIndex + 1} of {numberOfQuestions}</span>\n                            <span className=\"mdi mdi-clock-outline mdi-24px\">Clock will go here</span>\n                        </p>\n                    </div>\n\n                    <h5>{currentQuestion.question}</h5>\n                \n                   <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p  onClick={this.handleOptionClick}className=\"option\">{currentQuestion.optionB}</p>\n                  </div>\n\n                  <div className=\"options-container\">\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n                  </div>\n                  <div className=\"button-container\">\n                      <button id=\"previous-button\" onClick={this.handleButtonClick}>Previous</button>\n                      <button id=\"next-button\"     onClick={this.handleButtonClick}>Next</button>\n                      <button id=\"quit-button\"     onClick={this.handleButtonClick}>QuitGame</button>\n                  </div>\n                </div>\n            </Fragment>\n           \n        );\n    }\n}\n\n\n\nexport default GamePages;","import React from \"react\";\nimport \"./navstyle.css\";\n\nfunction Nav() {\n    return (\n        <div className=\"navparentdiv\">\n            <div className=\"main-nav\">\n                <ul className=\"nav-names\">\n                    <li><a href=\"/\">Home</a></li>\n                    <li><a href=\"/game\">Game Page</a></li>\n                    <li><a href=\"/profile\">Profile</a></li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nexport default Nav;","import React, {Component, Fragment} from 'react';\nimport { Link } from 'react-router-dom';\nimport {Helmet} from 'react-helmet';\n\nconst QuizInstructions = () => (\n    <Fragment>\n        <Helmet><title>Quiz Instructions-Quiz App</title></Helmet>\n        <div className=\"instructions container\">\n            <h1>Instructions on Playing Game</h1>\n            <p>Read Instructions On How to Win !!!!</p>\n            <ul className=\"browser-default\" id=\"main-list\">\n                <li>Step 1</li>\n                <li>Step 2</li>\n                <li>Step 3</li>              \n            </ul>\n            <div>\n                <span className=\"left\"><Link to =\"/\">Return To Home Page</Link></span>\n                <span className=\"right\"><Link to =\"/play/quiz\">Lets Play!</Link></span>\n\n            </div>\n        </div>\n    </Fragment>\n   \n);\n\n\nexport default QuizInstructions;","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport GameHeader from \"./pages/components/GameHeader\";\nimport Game from \"./pages/GamePages\";\nimport Login from \"./pages/LoginPages\";\nimport Nav from \"./pages/components/Nav\"\nimport Profile from \"./pages/ProfilePages\";\nimport QuizInstructions from \"./pages/QuizInstructions\";\n// kyles\n// import QuizInstructions from '../../pages/GamePages/QuizInstructions';\nimport \"./App.css\";\n\nfunction App() {\n    return (\n      <Router> \n        <div>\n        <Nav />\n        <GameHeader />\n          <Route exact path=\"/\" component={Login} />\n          <Route exact path=\"/home\" component={Login} />p\n      \n      {/* kyles input  */}\n          <Route path=\"/play/instructions\" component={QuizInstructions}></Route>\n   \n          <Route exact path=\"/profile\" component= {Profile} />\n          <Route exact path=\"/game\" component={Game} />\n        </div>\n      </Router>\n    );\n  }\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n\n\n\n"],"sourceRoot":""}